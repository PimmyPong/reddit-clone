// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// prisma/schema.prisma
datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id         String      @id @default(uuid())
  username   String      @unique
  password   String
  subreddits Subreddit[]
  posts      Post[]
  votes      Vote[]
}
//each user has multiple subs,posts,and votes

model Subreddit {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  posts     Post[]
}
//each sub has multiple posts

model Post {
  id          String    @id @default(uuid())
  title       String?
  message     String
  user        User      @relation(fields: [userId], references: [id])
  userId      String
  subreddit   Subreddit @relation(fields: [subredditId], references: [id])
  subredditId String
  parent      Post?     @relation("children", fields: [parentId], references: [id], onDelete: Cascade)
  children    Post[]    @relation("children")
  parentId    String?
  votes       Vote[]
  createdAt   DateTime  @default(now())
}
//parentId point to []of children(same relationship)
//parent = comment(post) but it's optional cuz the root of comment does not have a parent. it is just the child of the post, doesn't have children or parent above it.
//

model Vote {
  id       String  @id @default(uuid())
  user     User    @relation(fields: [userId], references: [id])
  userId   String
  post     Post    @relation(fields: [postId], references: [id])
  postId   String
  isUpvote Boolean
}

